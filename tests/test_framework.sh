#!/bin/bash

# test_framework.sh - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–†–ï–ô–ú–í–û–†–ö–ê –ò –ë–ò–ë–õ–ò–û–¢–ï–ö"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫
check_library_existence() {
    local libs=("../lib/logger.sh" "../lib/validator.sh" "../lib/formatter.sh" "../lib/tester.sh")
    
    for lib in "${libs[@]}"; do
        if [[ -f "$lib" ]]; then
            echo "‚úÖ –ù–∞–π–¥–µ–Ω–∞: $lib"
        else
            echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: $lib"
            return 1
        fi
    done
    return 0
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
test_library_syntax() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫..."
    
    local libs=("../lib/logger.sh" "../lib/validator.sh" "../lib/formatter.sh" "../lib/tester.sh")
    local has_errors=0
    
    for lib in "${libs[@]}"; do
        if bash -n "$lib"; then
            echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $lib"
        else
            echo "‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤: $lib"
            has_errors=1
        fi
    done
    
    return $has_errors
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π logger
test_logger_functions() {
    echo "üìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞..."
    
    source ../lib/logger.sh
    
    # –¢–µ—Å—Ç —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    log_debug "–¢–µ—Å—Ç–æ–≤–æ–µ debug —Å–æ–æ–±—â–µ–Ω–∏–µ" > /dev/null
    log_info "–¢–µ—Å—Ç–æ–≤–æ–µ info —Å–æ–æ–±—â–µ–Ω–∏–µ" > /dev/null
    log_warn "–¢–µ—Å—Ç–æ–≤–æ–µ warn —Å–æ–æ–±—â–µ–Ω–∏–µ" > /dev/null
    log_error "–¢–µ—Å—Ç–æ–≤–æ–µ error —Å–æ–æ–±—â–µ–Ω–∏–µ" > /dev/null
    
    echo "‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–≥–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞—é—Ç"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π validator
test_validator_functions() {
    echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞..."
    
    source ../lib/validator.sh
    
    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–∏—Å–µ–ª
    if validate_number "123" && ! validate_number "abc"; then
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∏—Å–µ–ª —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–∏—Å–µ–ª"
        return 1
    fi
    
    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫
    if validate_string "test" && ! validate_string ""; then
        echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫"
        return 1
    fi
    
    return 0
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π formatter
test_formatter_functions() {
    echo "üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞..."
    
    source ../lib/formatter.sh
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞
    local formatted=$(format_output "test" "INFO")
    if [[ -n "$formatted" ]]; then
        echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–≤–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞"
        return 1
    fi
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main() {
    echo "–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫
    if ! check_library_existence; then
        echo "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    if ! test_library_syntax; then
        echo "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ: —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö"
        exit 1
    fi
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    test_logger_functions
    test_validator_functions
    test_formatter_functions
    
    echo ""
    echo "‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–†–ï–ô–ú–í–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
main "$@"