#!/bin/bash

# test_queue.sh - –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏

source ../lib/tester.sh
source ../src/queue.sh

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ß–ï–†–ï–î–ò (FIFO)"
echo "=============================="

reset_test_counters

describe "–ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏"

it "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"
queue_api init
assert_true "queue_api is_empty" "–û—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"
assert_equal "0" "$(queue_api size)" "–†–∞–∑–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0"

it "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞"
queue_api enqueue "first_task"
assert_equal "false" "$(queue_api is_empty)" "–û—á–µ—Ä–µ–¥—å –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π"
assert_equal "1" "$(queue_api size)" "–†–∞–∑–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1"
assert_equal "first_task" "$(queue_api peek)" "–ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'first_task'"

it "–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞"
dequeued=$(queue_api dequeue)
assert_equal "first_task" "$dequeued" "–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'first_task'"
assert_equal "true" "$(queue_api is_empty)" "–û—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è"
end_describe

describe "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—è–¥–∫–∞ FIFO (First-In-First-Out)"

it "–ü–æ—Ä—è–¥–æ–∫ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç FIFO"
queue_api enqueue "task1"
queue_api enqueue "task2"
queue_api enqueue "task3"

dequeue1=$(queue_api dequeue)
dequeue2=$(queue_api dequeue) 
dequeue3=$(queue_api dequeue)

assert_equal "task1" "$dequeue1" "–ü–µ—Ä–≤—ã–π dequeue –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 'task1' (–ø–µ—Ä–≤—ã–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π)"
assert_equal "task2" "$dequeue2" "–í—Ç–æ—Ä–æ–π dequeue –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 'task2'"
assert_equal "task3" "$dequeue3" "–¢—Ä–µ—Ç–∏–π dequeue –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 'task3' (–ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π)"
assert_equal "true" "$(queue_api is_empty)" "–û—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π"
end_describe

describe "–ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"

it "Dequeue –∏–∑ –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"
result=$(queue_api dequeue 2>&1)
exit_code=$?
assert_equal "1" "$exit_code" "–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 –ø—Ä–∏ –æ—à–∏–±–∫–µ"
assert_true "echo '$result' | grep -q '–ø—É—Å—Ç'" "–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"

it "Peek –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"
result=$(queue_api peek 2>&1)
exit_code=$?
assert_equal "1" "$exit_code" "–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 –ø—Ä–∏ –æ—à–∏–±–∫–µ"
assert_true "echo '$result' | grep -q '–ø—É—Å—Ç'" "–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –ø—É—Å—Ç–æ–π –æ—á–µ—Ä–µ–¥–∏"

it "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞"
result=$(queue_api enqueue "" 2>&1)
exit_code=$?
assert_equal "1" "$exit_code" "–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1 –ø—Ä–∏ –æ—à–∏–±–∫–µ"
assert_true "echo '$result' | grep -q '–ü—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç'" "–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞ –ø—É—Å—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞"
end_describe

describe "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–µ—Ä–µ–¥–∏"

it "–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –æ—á–µ—Ä–µ–¥–∏"
queue_api init
queue_api enqueue "job1"
queue_api enqueue "job2"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ display –Ω–µ –ø–∞–¥–∞–µ—Ç –∏ —á—Ç–æ-—Ç–æ –≤—ã–≤–æ–¥–∏—Ç
output=$(queue_api display)
assert_equal "0" "$?" "Display –¥–æ–ª–∂–µ–Ω –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è —É—Å–ø–µ—à–Ω–æ"
assert_true "[[ -n '$output' ]]" "Display –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"

it "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ enqueue/dequeue"
queue_api init
for i in {1..50}; do
    queue_api enqueue "process_$i" > /dev/null
done
assert_equal "50" "$(queue_api size)" "–†–∞–∑–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 50 –ø–æ—Å–ª–µ 50 enqueue"

for i in {1..50}; do
    dequeued=$(queue_api dequeue)
    assert_equal "process_$i" "$dequeued" "Dequeue –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å process_$i"
done
assert_equal "true" "$(queue_api is_empty)" "–û—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ –≤—Å–µ—Ö dequeue"
end_describe

describe "–°–º–µ—à–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"

it "–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ enqueue –∏ dequeue"
queue_api init
queue_api enqueue "A"
queue_api enqueue "B"
dequeue1=$(queue_api dequeue)
queue_api enqueue "C")
queue_api enqueue "D"
dequeue2=$(queue_api dequeue)
dequeue3=$(queue_api dequeue)
dequeue4=$(queue_api dequeue)

assert_equal "A" "$dequeue1" "–ü–µ—Ä–≤—ã–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å A"
assert_equal "B" "$dequeue2" "–í—Ç–æ—Ä–æ–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å B" 
assert_equal "C" "$dequeue3" "–¢—Ä–µ—Ç–∏–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å C"
assert_equal "D" "$dequeue4" "–ß–µ—Ç–≤–µ—Ä—Ç—ã–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å D"

it "–û—á–µ—Ä–µ–¥—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–∏ —Å–º–µ—à–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö"
queue_api init
queue_api enqueue "start"
queue_api enqueue "middle"
dequeue1=$(queue_api dequeue)
queue_api enqueue "end"
dequeue2=$(queue_api dequeue)
dequeue3=$(queue_api dequeue)

assert_equal "start" "$dequeue1" "–ü–µ—Ä–≤—ã–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'start'"
assert_equal "middle" "$dequeue2" "–í—Ç–æ—Ä–æ–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'middle'"
assert_equal "end" "$dequeue3" "–¢—Ä–µ—Ç–∏–π dequeue –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 'end'"
end_describe

describe "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"

it "–ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
queue_api init
start_time=$(date +%s%N)
for i in {1..1000}; do
    queue_api enqueue "fast_$i" > /dev/null
done
for i in {1..1000}; do
    queue_api dequeue > /dev/null
done
end_time=$(date +%s%N)
duration=$(( (end_time - start_time) / 1000000 ))

assert_true "[[ $duration -lt 5000 ]]" "1000 –æ–ø–µ—Ä–∞—Ü–∏–π –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è < 5 —Å–µ–∫—É–Ω–¥"
assert_equal "true" "$(queue_api is_empty)" "–û—á–µ—Ä–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π"
end_describe

# –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo ""
echo "üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –û–ß–ï–†–ï–î–ò:"
end_describe

exit $?